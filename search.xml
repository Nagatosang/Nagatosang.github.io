<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>离散数学</title>
    <url>/2022/07/31/lisan/</url>
    <content><![CDATA[<p>看的是:<a href="https://www.bilibili.com/video/BV1cs411H7sz?spm_id_from=333.337.search-card.all.click&vd_source=18f425caec31c9c45e1c1b046e1e7ba2">这个</a>视频</p>
<p>#1.什么是集合?</p>
<blockquote>
<p>集合是由指定范围内的满足给定条件的所有对象聚集在一起构成,每一个对象称为这个集合的元素</p>
</blockquote>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>1JAVA</title>
    <url>/2022/07/30/1JAVA/</url>
    <content><![CDATA[<p>#JAVA</p>
<hr>
<p>每一篇内容是1到50集</p>
<p>##P11.cmd的Helloworld编译</p>
<span id="more"></span>
<p>###注意</p>
<blockquote>
<ol>
<li>在.java文件所在位置打开cmd</li>
<li>确保用记事本编译的类名称与.java文件名相同</li>
</ol>
</blockquote>
<p>###cmd的编写</p>
<blockquote>
<ol>
<li>javac 文件名.java(进行编译,使用jdk中bin文件夹下的javac.exe操作,执行后生成文件名.class文件)</li>
<li>java 文件名(不要加.class后缀,回车后就会执行)</li>
</ol>
</blockquote>
<hr>
<p>##P14关键字的特点</p>
<blockquote>
<ol>
<li>完全小写的字母 如:public</li>
<li>有特殊颜色</li>
</ol>
</blockquote>
<hr>
<p>##P15标识符<br>###什么是标识符</p>
<blockquote>
<p>标识符:是指在程序中自己定义的内容,比如类的名字,方法名字,变量名字,都是标识符<br>###命名规则(硬性要求)</p>
<ol>
<li>可以包含<strong>英文26字母</strong>,<strong>数字</strong>,<strong>$(美元)</strong>,<strong>_(下划线)</strong>.</li>
<li>不能以数字开头</li>
<li>不能是关键字</li>
</ol>
<p>###命名规范(软性建议)</p>
<ol>
<li>类名规范:首字母大写,后面每个单词首字母大写(大驼峰模式) 如:HelloWorld</li>
<li>变量名规范:首字母小写,后面每个单词首写字母大写(小驼峰)</li>
<li>方法名规范:同变量名</li>
</ol>
</blockquote>
<hr>
<p>##P16常量Const<br>###常量的分类</p>
<blockquote>
<ol>
<li>字符串常量:凡是用双引号引起的部分,叫做字符串常量 如:”abc”,”123”</li>
<li>整数常量:直接写上的数字,没有小数点 如:100,200</li>
<li>浮点数常量:直接写上的数字,有小数点 如:2.5</li>
<li>字符常量:凡是用单引号引起来的单个字符,就做字符常量 如:’A’,’中’,’6’</li>
<li>布尔常量:true,false</li>
<li>空常量:null 代表没有任何数据</li>
</ol>
<p>###常量的输出<br>System.out.println(“”);可以直接连着<br>System.out.println(‘ ‘);不能连着写,可以中间空格<br>System.out.println(‘AB’);两个单引号之间必须有且仅有一个字符<br>System.out.println(null);空常量null不能直接打印输出</p>
</blockquote>
<hr>
<p>##P18基本数据类型<br>###四类</p>
<blockquote>
<p>整数型:byte,short,int,long<br>浮点型:float,double<br>字符型:char<br>布尔型:boolean<br>###整数型</p>
<table>
<thead>
<tr>
<th>byte</th>
<th>short</th>
<th>int</th>
<th>long</th>
</tr>
</thead>
<tbody><tr>
<td>1字节</td>
<td>2字节</td>
<td>4字节</td>
<td>8字节</td>
</tr>
<tr>
<td>-128-127</td>
<td>-32768-32767</td>
<td>正负21亿</td>
<td>非常大</td>
</tr>
<tr>
<td>###浮点型</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>float</td>
<td>double(默认)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>——-</td>
<td>————</td>
<td></td>
<td></td>
</tr>
<tr>
<td>4个字节</td>
<td>8个字节</td>
<td></td>
<td></td>
</tr>
<tr>
<td>###注意</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ol>
<li>字符串不是基本类型,而是引用类型</li>
<li>浮点型可能是一个近似值,并非确定的值</li>
<li>数据范围与字节数不一定相关,列如float数据范围比long更加广泛,但是float是4字节,long是8字节,因为科学计数法省空间</li>
<li>浮点数当中默认类型是double,如果一定要使用float类型,需要加上一个后缀F</li>
<li>整数默认是int类型,如果要是long类型,需要加上一个后缀L(推荐使用大写字母,小写字母也行)</li>
</ol>
</blockquote>
<hr>
<p>##P19变量</p>
<blockquote>
<p>运行期间,可以改变的量</p>
</blockquote>
<p><strong>创建一个变量</strong></p>
<blockquote>
<p>数据类型 变量名称;  </p>
</blockquote>
<p><strong>赋值</strong></p>
<blockquote>
<p>变量名称 &#x3D; 数据值;</p>
</blockquote>
<hr>
<p>##P23数据类型转换<br>当数据类型不一样的时候将会发生类型转换</p>
<blockquote>
<ol>
<li>自动类型转换(隐式)<blockquote>
<p>特点:代码不需要进行特殊转换<br>规则:数据范围从小变大<br>当符合数据范围从小变大就会自动完成数据的转化<br>列如:long num1&#x3D;100;将100的int转换到long型的num1中</p>
</blockquote>
</li>
<li>强制类型转换(显式)<blockquote>
<p>特点:代码需要进行特殊的格式处理,不能自动完成<br>格式:范围小的类型 范围小的变量名 &#x3D; (范围小的类型) 原本范围大的数据<br>如:int num &#x3D; (int) 100L</p>
</blockquote>
</li>
</ol>
<p>###注意</p>
<ol>
<li>强制类型转换不推荐使用 会导致精度的损失<blockquote>
<p>如:int num2 &#x3D; (int)6000000000L  输出的结果是1705032704<br>如:int num3 &#x3D;(int)3.5 输出的结果是3,不是四舍五入只是抹除了小数位</p>
</blockquote>
</li>
<li>byte&#x2F;short&#x2F;char这三种类型都可以发生数学运算,列如加法”+”<blockquote>
<p>char zifu1&#x3D;’A’;<br>System.out.println(zifu1+1);&#x2F;&#x2F;输出66<br>一旦char类型进行了数学运算,那么字符就会按照一定的规则翻译成一个数字</p>
</blockquote>
</li>
<li>byte&#x2F;short&#x2F;char这三种类型都会被首先提升为int类型,然后进行计算<blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;&gt;<span class="type">byte</span> <span class="variable">num4</span> <span class="operator">=</span><span class="number">40</span>;</span><br><span class="line">&gt;&gt;<span class="type">short</span> num6=<span class="number">60</span>;</span><br><span class="line">&gt;&gt;<span class="comment">//byte+short--&gt;int+int--&gt;int,先转化为int再相加</span></span><br><span class="line">&gt;&gt;<span class="comment">//int强制转换为short:注意必须保证逻辑上真实大小&gt;&gt;本来就没有超过short范围,否则就会发生数据移除</span></span><br><span class="line">&gt;&gt;<span class="type">short</span> result=(<span class="type">short</span>)(num4+num6);</span><br><span class="line">&gt;&gt;System.out.println(result);</span><br></pre></td></tr></table></figure></blockquote>
</li>
<li>boolean类型不能发生数据类型的转换</li>
</ol>
</blockquote>
<hr>
<p>##P26算数运算符</p>
<blockquote>
<p>运算符:进行特定操作的符号,列如:+<br>表达式:用运算符连起来的式子叫做表达式,列如:20+5,a+b<br>###+</p>
<ol>
<li>对于字符char,在计算之前,char会被提升为int,然后再进行计算,char与int对应的表:ASCII,Unicode</li>
<li>对于字符串String(首字母大写,所以不是关键字)来说,加号代表字符串的连接操作如:System.out.println(“Hello”+”World”);&#x2F;&#x2F;HelloWorld</li>
<li><strong>任何数据类型和字符串进行连接的时候,结果都会变成字符串</strong>如:String Str2&#x3D;”java”;  System.out.println(str2+20);&#x2F;&#x2F;java20</li>
</ol>
<p>###优先级问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;System.out.println(str2+<span class="number">20</span>+<span class="number">30</span>);<span class="comment">//java2030</span></span><br><span class="line">&gt;System.out.println(str2+(<span class="number">20</span>+<span class="number">30</span>));<span class="comment">//java50</span></span><br></pre></td></tr></table></figure>
<p>###自增自减<br>基本含义:让一个变量涨数字1,或者减数字1<br>使用格式:写在变量名称之前或者之后,列如:++num,num++<br>使用方法:</p>
<ol>
<li>单独使用:不和其他任何操作混合,自己独立成为一个步骤</li>
<li>混合使用:和其他操作&#x3D;了.在单独使用时,前++和后++没有任何区别<br>使用区别:<br>如果是<strong>前++</strong>,那么变量<strong>立刻马上+1</strong>,然后拿着结果进行使用 <strong>先加后用</strong><br>如果是<strong>后++</strong>,那么首先使用变量本来的数值,<strong>然后再让变量+1</strong> <strong>先用后加</strong></li>
</ol>
<p>###复合赋值运算符<br>+&#x3D;: a+&#x3D;1 相当于 a&#x3D;a+1<br>-&#x3D;: b-&#x3D;4 相当于 b&#x3D;b-4<br>**&#x3D;: c*&#x3D;5 相当于 c&#x3D;c*5<br>&#x2F;&#x3D;: d&#x2F;&#x3D;6 相当于 d&#x3D;d&#x2F;6<br>%&#x3D;: e%&#x3D;7 相当于 e&#x3D;e%7<br>注意</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;<span class="type">byte</span> num=<span class="number">30</span>;</span><br><span class="line">&gt;<span class="comment">//num = num +5;</span></span><br><span class="line">&gt;<span class="comment">//num=byte+int;</span></span><br><span class="line">&gt;<span class="comment">//num=int+int;</span></span><br><span class="line">&gt;<span class="comment">//num=(byte)int;</span></span><br><span class="line">&gt;num+=<span class="number">5</span>;</span><br><span class="line">&gt;System.out.println(num);<span class="comment">//35</span></span><br></pre></td></tr></table></figure>
<p>###比较运算符<br>&#x3D;&#x3D;:比较是否相等<br>!&#x3D;:不等与,返回true<br>####逻辑运算符<br>与(并且) &amp;&amp;:全部是ture才是true<br>或(或者) ||:至少一个是true<br>非(取反) !:本来是true,变成false;本来false,才是false<br><strong>短路</strong>:&amp;&amp;与||有短路效果,&amp;&amp;右边是false时,左边将不再判断</p>
</blockquote>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>my-first-blog</title>
    <url>/2022/07/27/%E4%B8%80/</url>
    <content><![CDATA[<h1 id="ok"><a href="#ok" class="headerlink" title="#ok"></a>#ok</h1><p>终于搞好了,真他妈的累,现在都他妈1点多了<br>我的</p>
<hr>
<p><del>的</del><br><u>hh<u><br>[^run]<br>[^run]:hahah</p>
<ul>
<li>ui</li>
<li>dd</li>
<li>dd</li>
</ul>
<ol>
<li>1</li>
<li>1<ol>
<li>e使用tab建</li>
<li><blockquote>
<p>111<br>q</p>
<blockquote>
<p>去</p>
</blockquote>
</blockquote>
</li>
</ol>
</li>
</ol>
<p>[^RUNOOB]<br> <img src="/FVNZTNOUUAAvZWV.jpg"><br><code>int</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br></pre></td></tr></table></figure>
<p>这是一个链接 <a href="https://www.runoob.com/">菜鸟教程</a><br><a href="https://www.runoob.com/">https://www.runoob.com</a><br>这个链接用 1 作为网址变量 <a href="http://www.google.com/">Google</a><br>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/">Runoob</a><br>然后在文档的结尾为变量赋值（网址）</p>
<table>
<thead>
<tr>
<th>hah</th>
<th>hah</th>
<th>hah</th>
</tr>
</thead>
<tbody><tr>
<td>sa</td>
<td>s</td>
<td>s</td>
</tr>
</tbody></table>
]]></content>
  </entry>
</search>
